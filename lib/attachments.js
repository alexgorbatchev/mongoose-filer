// Generated by CoffeeScript 1.3.3
(function() {
  var async, attachments, extensions, imagemagick, mkdirp;

  imagemagick = require('imagemagick');

  mkdirp = require('mkdirp');

  async = require('async');

  extensions = {
    "image/jpeg": ".jpg",
    "image/png": ".png",
    "image/gif": ".gif"
  };

  module.exports = attachments = function(config) {
    var Attachments;
    console.log("Attachments initialized with config:", config);
    return {
      Attachment: Attachments = (function() {

        function Attachments(file) {
          this.file = file;
        }

        Attachments.prototype.conversions = function() {
          var conversion, conversions, id, name, style;
          name = this.file.name.replace(/(\..*?)$/, '');
          id = new Date().getTime();
          return conversions = (function() {
            var _ref, _results,
              _this = this;
            _ref = config.styles;
            _results = [];
            for (style in _ref) {
              conversion = _ref[style];
              _results.push((function(style, conversion) {
                var args, destFile, groups, path;
                path = "" + config.storage.dir.path + "/" + config.prefix + "/" + id + "/" + style;
                destFile = "" + path + "/" + name + extensions[_this.file.type];
                args = [_this.file.path, '-resize', conversion];
                if (groups = conversion.match(/^(.*)\^$/)) {
                  args = args.concat(['-gravity', 'center', '-extent', groups[1]]);
                }
                args.push(destFile);
                return {
                  args: args,
                  convert: function(cb) {
                    return mkdirp(path, function(err) {
                      if (err != null) {
                        return cb(err);
                      }
                      return imagemagick.convert(args, cb);
                    });
                  }
                };
              })(style, conversion));
            }
            return _results;
          }).call(this);
        };

        Attachments.prototype.convert = function(cb) {
          var c, conversions;
          conversions = this.conversions();
          console.log("Converting:", (function() {
            var _i, _len, _results;
            _results = [];
            for (_i = 0, _len = conversions.length; _i < _len; _i++) {
              c = conversions[_i];
              _results.push(c.args);
            }
            return _results;
          })());
          return async.series((function() {
            var _i, _len, _results;
            _results = [];
            for (_i = 0, _len = conversions.length; _i < _len; _i++) {
              c = conversions[_i];
              _results.push(c.convert);
            }
            return _results;
          })(), cb);
        };

        return Attachments;

      })()
    };
  };

}).call(this);
